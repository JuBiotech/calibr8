name: pipeline

on: [push, pull_request]

jobs:
  test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -e . 
        pip install flake8 pytest pytest-cov codecov wheel
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --statistics
    - name: Test with pytest
      run: |
        pytest --cov=./calibr8 --cov-append --cov-report term-missing calibr8/tests.py
        coverage report -m
    - name: Run dedicated coverage step
      if: matrix.python-version == 3.8
      run: |
        export NUMBA_DISABLE_JIT=1
        pytest --cov=./calibr8 --cov-report xml --cov-report term-missing calibr8/tests.py
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      if: matrix.python-version == 3.8
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    - name: Test with PyMC3 and PyGMO
      run: |
        pip install pymc3 
        pip install pygmo
    - name: Run dedicated coverage step
      if: matrix.python-version == 3.8
      run: |
        export NUMBA_DISABLE_JIT=1
        pytest --cov=./calibr8 --cov-report xml --cov-report term-missing calibr8/tests.py
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      if: matrix.python-version == 3.8
      with:
        file: ./coverage-pymc3-pygmo.xml
    - name: Test Wheel install and import
      run: |
        python setup.py bdist_wheel
        cd dist
        pip install calibr8*.whl
        python -c "import calibr8; print(calibr8.__version__)"