name: pipeline

on:
  pull_request:
  push:
    branches: [master]

jobs:
  test-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.3.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -e .
        pip install flake8 pytest pytest-cov codecov wheel
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --statistics
    - name: Test with pytest
      run: |
        pytest --cov=./calibr8 --cov-append --cov-report xml --cov-report term-missing calibr8/tests.py
    - name: Install PyMC
      run: |
        pip install "pymc>=4.0.0"
    - name: Test with PyMC
      run: |
        pytest --cov=./calibr8 --cov-append --cov-report xml --cov-report term-missing calibr8/tests.py
    - name: Install PyMC3 and uninstall PyMC
      run: |
        pip uninstall -y pymc
        pip uninstall -y aesara
        pip install "pymc3>=3.11.5,<4" "numpy<1.22"
    - name: Test with PyMC3
      run: |
        pytest --cov=./calibr8 --cov-append --cov-report xml --cov-report term-missing calibr8/tests.py
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.python-version == 3.8
      with:
        file: ./coverage.xml
    - name: Test Wheel install and import
      run: |
        python setup.py bdist_wheel
        cd dist
        pip install calibr8*.whl
        python -c "import calibr8; print(calibr8.__version__)"
